# Save by sglallpr on 2024_10_31-15.53.20; build 2022.HF8 2023_03_27-08.24.44 RELr424 176957
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models.changeKey(fromName='Model-1', toName='Truss')
mdb.models['Truss'].ConstrainedSketch(name='__profile__', sheetSize=10000.0)
mdb.models['Truss'].sketches['__profile__'].Spot(point=(2060.0, 1000.0))
mdb.models['Truss'].sketches['__profile__'].Spot(point=(1700.0, 0.0))
mdb.models['Truss'].sketches['__profile__'].Spot(point=(1250.0, 225.0))
mdb.models['Truss'].sketches['__profile__'].Spot(point=(0.0, 850.0))
mdb.models['Truss'].sketches['__profile__'].Spot(point=(0.0, 1750.0))
mdb.models['Truss'].sketches['__profile__'].Line(point1=(2060.0, 1000.0), 
    point2=(1700.0, 0.0))
mdb.models['Truss'].sketches['__profile__'].Line(point1=(1700.0, 0.0), point2=(
    1250.0, 225.0))
mdb.models['Truss'].sketches['__profile__'].Line(point1=(1250.0, 225.0), 
    point2=(0.0, 850.0))
mdb.models['Truss'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Truss'].sketches['__profile__'].geometry[3], 
    entity2=mdb.models['Truss'].sketches['__profile__'].geometry[4])
mdb.models['Truss'].sketches['__profile__'].Line(point1=(0.0, 850.0), point2=(
    0.0, 1750.0))
mdb.models['Truss'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Truss'].sketches['__profile__'].geometry[5])
mdb.models['Truss'].sketches['__profile__'].Line(point1=(0.0, 1750.0), point2=(
    1250.0, 225.0))
mdb.models['Truss'].Part(dimensionality=TWO_D_PLANAR, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Truss'].parts['Part-1'].BaseWire(sketch=
    mdb.models['Truss'].sketches['__profile__'])
del mdb.models['Truss'].sketches['__profile__']
mdb.models['Truss'].Material(name='Steel')
mdb.models['Truss'].materials['Steel'].Density(table=((7.8e-06, ), ))
mdb.models['Truss'].materials['Steel'].Elastic(table=((209000.0, 0.3), ))
mdb.models['Truss'].TrussSection(area=1000.0, material='Steel', name=
    'section1')
mdb.models['Truss'].parts['Part-1'].Set(edges=
    mdb.models['Truss'].parts['Part-1'].edges.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-1')
mdb.models['Truss'].parts['Part-1'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Truss'].parts['Part-1'].sets['Set-1'], sectionName='section1', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Truss'].TrussSection(area=100.0, material='Steel', name=
    'Section-2')
mdb.models['Truss'].parts['Part-1'].Set(edges=
    mdb.models['Truss'].parts['Part-1'].edges.getSequenceFromMask(('[#1e ]', ), 
    ), name='Set-2')
mdb.models['Truss'].parts['Part-1'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Truss'].parts['Part-1'].sets['Set-2'], sectionName='Section-2', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Truss'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Truss'].rootAssembly.Instance(dependent=ON, name='Part-1-1', part=
    mdb.models['Truss'].parts['Part-1'])
mdb.models['Truss'].rootAssembly.Set(name='Set-1', vertices=
    mdb.models['Truss'].rootAssembly.instances['Part-1-1'].vertices.getSequenceFromMask(
    ('[#11 ]', ), ))
mdb.models['Truss'].PinnedBC(createStepName='Initial', localCsys=None, name=
    'pinned', region=mdb.models['Truss'].rootAssembly.sets['Set-1'])
mdb.models['Truss'].rootAssembly.Set(name='Set-2', vertices=
    mdb.models['Truss'].rootAssembly.instances['Part-1-1'].vertices.getSequenceFromMask(
    ('[#8 ]', ), ))
mdb.models['Truss'].DisplacementBC(amplitude=UNSET, createStepName='Initial', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='roller', 
    region=mdb.models['Truss'].rootAssembly.sets['Set-2'], u1=SET, u2=UNSET, 
    ur3=SET)
mdb.models['Truss'].FrequencyStep(name='modal', numEigen=2, previous='Initial')
mdb.models['Truss'].parts['Part-1'].setElementType(elemTypes=(ElemType(
    elemCode=T2D2, elemLibrary=STANDARD), ), regions=(
    mdb.models['Truss'].parts['Part-1'].edges.getSequenceFromMask(('[#1f ]', ), 
    ), ))
mdb.models['Truss'].parts['Part-1'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Truss'].parts['Part-1'].edges.getSequenceFromMask(('[#1f ]', ), 
    ), number=5)
mdb.models['Truss'].parts['Part-1'].seedEdgeByNumber(constraint=FINER, edges=
    mdb.models['Truss'].parts['Part-1'].edges.getSequenceFromMask(('[#1f ]', ), 
    ), number=1)
mdb.models['Truss'].parts['Part-1'].generateMesh()
mdb.models['Truss'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Truss', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'HCBC-034', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Boundary conditions are specified on inactive dof 6 at 1 nodes. The nodes have been identified in node set WarnNodeBCInactiveDof6.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'M:\\Documents\\AERO417\\AERO417\\Coursework1\\Abaqus\\Modal\\Job-1.odb', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'HCBC-034', 'handle': 6932, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'Job-1', 'memory': 27.0})
mdb.jobs['Job-1']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 16165.0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(MINIMUM_MEMORY, {'minimum_memory': 18.0, 
    'phase': STANDARD_PHASE, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 'attempts': 1, 
    'timeIncrement': 1e-36, 'increment': 1, 'stepTime': 1e-36, 'step': 1, 
    'jobName': 'Job-1', 'severe': 0, 'iterations': 0, 'phase': STANDARD_PHASE, 
    'equilibrium': 0})
mdb.jobs['Job-1']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Thu Oct 31 16:08:58 2024', 
    'jobName': 'Job-1'})
# Save by sglallpr on 2024_10_31-16.12.17; build 2022.HF8 2023_03_27-08.24.44 RELr424 176957
# Save by sglallpr on 2024_10_31-16.12.47; build 2022.HF8 2023_03_27-08.24.44 RELr424 176957
